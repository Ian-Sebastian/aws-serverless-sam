version: "3.5"

services:
  aws-step-functions:
    container_name: aws-step-functions
    image: amazon/aws-stepfunctions-local
    ports:
      - 8083:8083
    environment:
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=
      - AWS_SECRET_ACCESS_KEY=
      - WAIT_TIME_SCALE=15
      - LAMBDA_ENDPOINT=http://host.docker.internal:3001
      - BATCH_ENDPOINT=
      - DYNAMODB_ENDPOINT=
      - ECS_ENDPOINT=
      - GLUE_ENDPOINT=
      - SAGE_MAKER_ENDPOINT=
      - SQS_ENDPOINT=
      - SNS_ENDPOINT=
      - STEP_FUNCTIONS_ENDPOINT=http://host.docker.internal:8083
    extra_hosts:
      - host.docker.internal:host-gateway
    networks:
      - sam-network
  postgres:
    container_name: postgres
    image: postgres:12
    ports:
      - 5432:5432
    volumes:
      - ./utils/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: user_db
      PG_DATA: /var/lib/postgresql/data
    networks:
      - sam-network
  curl-tool:
    container_name: curl-tool
    image: raesene/alpine-noroot-containertools
    stdin_open: true # docker run -i
    tty: true # docker run -t
    entrypoint: /bin/sh
    user: root
    extra_hosts:
      - host.docker.internal:host-gateway
    networks:
      - sam-network
networks:
  sam-network:
    name: sam-network
